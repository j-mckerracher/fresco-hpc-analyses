[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fresco-failure-detector"
version = "1.0.0"
description = "Early-warning failure detection pipeline for FRESCO HPC dataset"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "FRESCO Analysis Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.9"
dependencies = [
    "pandas>=1.5.0",
    "pyarrow>=10.0.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.2.0",
    "xgboost>=1.6.0",
    "lightgbm>=3.3.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "typer>=0.7.0",
    "rich>=12.0.0",
    "pydantic>=1.10.0",
    "joblib>=1.2.0",
    "tqdm>=4.64.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "ruff>=0.0.260",
    "mypy>=1.0.0",
]
shap = [
    "shap>=0.41.0",
]

[project.scripts]
fresco-fd = "fresco_fd.cli:app"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["fresco_fd*"]

[tool.black]
line-length = 88
target-version = ['py310', 'py311']

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "--verbose --cov=fresco_fd --cov-report=term-missing --cov-report=html"